
upstream client {
    server client:8080;
}

upstream api {
    server api:8000;
}

server {
    listen 80;

    location / {
        proxy_pass http://client;
    }

    # backend urls
    location ~ ^/(admin|api) {
        proxy_redirect off;
        proxy_pass http://api;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
    }

    # backend static
    location ~ ^/(staticfiles|media)/(.*)$ {
        alias /$1/$2;
    }

    # Some basic cache-control for static files to be sent to the browser
    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }
}










# server {
#     listen 80;

#     location / {
#         proxy_pass http://client;
#     }

#     location /api {
#         rewrite /api(.*) /$1 break;
#         proxy_pass http://api;
#     }

#     location /admin {
#         proxy_pass http://api;
#     }

#      # backend static
#     location ~ ^/(staticfiles|media)/(.*)$ {
#       alias /$1/$2;
#     }

#     # Some basic cache-control for static files to be sent to the browser
#     location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
#       expires max;
#       add_header Pragma public;
#       add_header Cache-Control "public, must-revalidate, proxy-revalidate";
#     }
# }